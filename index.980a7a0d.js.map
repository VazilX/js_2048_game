{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,C,C,E,I,I,E,E,E,E,M,C,I,C,I,E,C,C,E,A,C,E,U,C,E,U,E,C,E,E,Y,C,C,E,U,G,C,E,Q,C,C,C,E,O,c,C,E,E,G,C,E,C,C,S,E,C,E,I,I,E,E,E,U,M,C,I,C,I,E,A,M,S,C,E,C,S,C,E,C,C,E,E,O,I,C,E,C,Y,O,O,qB,E,C,E,E,M,C,O,qB,C,G,M,C,S,C,E,O,O,wB,C,E,G,U,A,G,E,E,O,C,S,C,M,E,E,C,C,E,C,A,K,E,O,c,C,E,E,C,M,E,W,C,E,a,C,E,S,C,C,G,A,C,C,E,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,E,I,A,W,M,A,U,wI,G,CCEA,IA2LI,EACA,EA5LE,EAAN,e,E,EAAM,SAAA,KAAA,A,S,C,C,C,E,G,C,C,a,C,E,M,A,U,oC,EAAA,IAAA,CAAA,GAIF,IAAI,CAAC,OAAO,CAAG,AAFG,GAEH,KAAK,MAAM,GAAiB,EAAI,EAE/C,IAAI,CAAC,MAAM,CAAG,IAAI,CAAC,SAAS,GAC5B,IAAI,CAAC,SAAS,CAAG,EAAA,CAAA,EAAK,IAAI,CAAC,MAAM,EAEjC,IAAI,CAAC,OAAO,CAAG,CAAA,EACf,IAAI,CAAC,IAAI,CAAG,IAAI,CAAC,OAAO,GACxB,IAAI,CAAC,KAAK,CAAG,CAAA,EACb,IAAI,CAAC,QAAQ,CAAG,CAAA,EAZd,EAcG,KAAK,CAAC,IAAI,CAAC,IAAI,C,CAdlB,O,EAAA,C,CAiBJ,IAAA,YAAA,MAAA,WAGE,IAAK,IAFC,EAAa,EAAE,CAEZ,EAAI,EAAG,EApBd,EAoBuB,UAAU,CAAC,MAAM,CAAE,IAG1C,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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _object_spread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _define_property(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar Tile = /*#__PURE__*/ function() {\n    function Tile() {\n        _class_call_check(this, Tile);\n        var CHANS_TWO = 0.9;\n        this.numeric = Math.random() < CHANS_TWO ? 2 : 4;\n        this.coords = this.findPlase();\n        this.oldCoords = _object_spread({}, this.coords);\n        this.canMuve = true;\n        this.tile = this.addTile();\n        this.moved = false;\n        this.combined = false;\n        Tile.tiles.push(this);\n    }\n    _create_class(Tile, [\n        {\n            key: \"findPlase\",\n            value: function findPlase() {\n                var freeFields = [];\n                for(var r = 0; r < Tile.FIELD_ROWS.length; r++){\n                    var columns = Tile.FIELD_ROWS[r].children;\n                    for(var c = 0; c < columns.length; c++)if (!columns[c].firstChild) freeFields.push({\n                        r: r,\n                        c: c\n                    });\n                }\n                if (freeFields.length === 0) return false;\n                var max = freeFields.length - 1;\n                var plase = Math.floor(Math.random() * (max + 1));\n                return freeFields[plase];\n            }\n        },\n        {\n            key: \"addTile\",\n            value: function addTile() {\n                var _this_coords = this.coords, r = _this_coords.r, c = _this_coords.c;\n                var fieldForAdd = Tile.FIELD_ROWS[r].children[c];\n                fieldForAdd.insertAdjacentHTML(\"beforeend\", '\\n      <div class=\"cell cell--'.concat(this.numeric, '\">').concat(this.numeric, \"</div>\\n    \"));\n                return fieldForAdd.children[0];\n            }\n        },\n        {\n            key: \"checkMoveLeft\",\n            value: function checkMoveLeft() {\n                var c = this.coords.c;\n                if (c === 0) return false;\n                var neighbour = this.findNeighbourL();\n                return this.checkNeighbour(neighbour);\n            }\n        },\n        {\n            key: \"checkMoveRight\",\n            value: function checkMoveRight() {\n                var c = this.coords.c;\n                if (c === 3) return false;\n                var neighbour = this.findNeighbourR();\n                return this.checkNeighbour(neighbour);\n            }\n        },\n        {\n            key: \"checkMoveTop\",\n            value: function checkMoveTop() {\n                var r = this.coords.r;\n                if (r === 0) return false;\n                var neighbour = this.findNeighbourU();\n                return this.checkNeighbour(neighbour);\n            }\n        },\n        {\n            key: \"checkMoveBottomn\",\n            value: function checkMoveBottomn() {\n                var r = this.coords.r;\n                if (r === 3) return false;\n                var neighbour = this.findNeighbourB();\n                return this.checkNeighbour(neighbour);\n            }\n        },\n        {\n            key: \"checkNeighbour\",\n            value: function checkNeighbour(neighbour) {\n                if (!neighbour) return true;\n                if (neighbour.numeric === this.numeric && !neighbour.combined && !this.combined) return true;\n                return false;\n            }\n        },\n        {\n            key: \"findNeighbourU\",\n            value: function findNeighbourU() {\n                var _this_coords = this.coords, r = _this_coords.r, c = _this_coords.c;\n                return Tile.tiles.find(function(tile) {\n                    if (tile.coords.c !== c) return false;\n                    if (tile.coords.r !== r - 1) return false;\n                    return true;\n                });\n            }\n        },\n        {\n            key: \"findNeighbourB\",\n            value: function findNeighbourB() {\n                var _this_coords = this.coords, r = _this_coords.r, c = _this_coords.c;\n                return Tile.tiles.find(function(tile) {\n                    if (tile.coords.c !== c) return false;\n                    if (tile.coords.r !== r + 1) return false;\n                    return true;\n                });\n            }\n        },\n        {\n            key: \"findNeighbourR\",\n            value: function findNeighbourR() {\n                var _this_coords = this.coords, r = _this_coords.r, c = _this_coords.c;\n                return Tile.tiles.find(function(tile) {\n                    if (tile.coords.r !== r) return false;\n                    if (tile.coords.c !== c + 1) return false;\n                    return true;\n                });\n            }\n        },\n        {\n            key: \"findNeighbourL\",\n            value: function findNeighbourL() {\n                var _this_coords = this.coords, r = _this_coords.r, c = _this_coords.c;\n                return Tile.tiles.find(function(tile) {\n                    if (tile.coords.r !== r) return false;\n                    if (tile.coords.c !== c - 1) return false;\n                    return true;\n                });\n            }\n        }\n    ]);\n    return Tile;\n}();\nTile.FIELD_ROWS = document.querySelectorAll(\".field-row\");\nTile.tiles = [];\nvar COUNT_FILDS_CELL = 4;\nvar score = 0;\nvar moveTimeout;\nvar newTimeout;\nvar forMoveInHtml = [];\nvar buttonStart = document.querySelector(\".start\");\nvar buttonRestart = document.querySelector(\".restart\");\nvar messageWin = document.querySelector(\".message-win\");\nvar messageStart = document.querySelector(\".message-start\");\nvar messageLose = document.querySelector(\".message-lose\");\nfunction addScore(specs) {\n    document.querySelector(\".game-score\").innerHTML = specs;\n}\nfunction moveAndCombineTileHTMLTimeout() {\n    return setTimeout(function() {\n        moveAndCombineTileHTML();\n    }, 100);\n}\nfunction moveAndCombineTileHTML() {\n    forMoveInHtml.forEach(function(tile) {\n        if (tile.moved) {\n            var _tile_oldCoords = tile.oldCoords, r = _tile_oldCoords.r, c = _tile_oldCoords.c;\n            tile.tile = tile.addTile();\n            if (tile.combined) {\n                tile.tile.classList.add(\"combin\");\n                tile.combined = false;\n            }\n            Tile.FIELD_ROWS[r].children[c].innerHTML = \"\";\n            tile.moved = false;\n            tile.oldCoords = _object_spread({}, tile.coords);\n            moveTimeout = null;\n        }\n    });\n}\nfunction stap(naighbour, direction, tile) {\n    // try {\n    if (naighbour) {\n        var naighbourIndex = Tile.tiles.indexOf(naighbour);\n        naighbour.tile.parentNode.innerHTML = \"\";\n        Tile.tiles.splice(naighbourIndex, 1);\n        naighbour.moved = false;\n        tile.numeric *= 2;\n        tile.combined = true;\n        score += tile.numeric;\n        if (tile.numeric >= 2042) messageWin.classList.remove(\"hidden\");\n    }\n    // } catch (error) {\n    //   debugger;\n    // }\n    switch(direction){\n        case \"ArrowUp\":\n            tile.coords.r -= 1;\n            break;\n        case \"ArrowLeft\":\n            tile.coords.c -= 1;\n            break;\n        case \"ArrowDown\":\n            tile.coords.r += 1;\n            break;\n        case \"ArrowRight\":\n            tile.coords.c += 1;\n            break;\n    }\n    return tile;\n}\nfunction newTileTimeout() {\n    return setTimeout(function() {\n        newTile();\n    }, 150);\n}\nfunction newTile() {\n    var tail = new Tile();\n    tail.tile.classList.add(\"born\");\n    newTimeout = null;\n}\nfunction checkOpportunity() {\n    return Tile.tiles.some(function(tile) {\n        return tile.checkMoveTop() || tile.checkMoveBottomn() || tile.checkMoveLeft() || tile.checkMoveRight();\n    });\n}\nbuttonStart.addEventListener(\"click\", function() {\n    buttonRestart.classList.remove(\"hidden\");\n    buttonStart.classList.add(\"hidden\");\n    messageStart.classList.add(\"hidden\");\n    newTileTimeout();\n    newTileTimeout();\n});\nbuttonRestart.addEventListener(\"click\", function() {\n    messageWin.classList.add(\"hidden\");\n    messageLose.classList.add(\"hidden\");\n    var cells = document.querySelectorAll(\".cell\");\n    cells.forEach(function(cell) {\n        cell.parentNode.innerHTML = \"\";\n    });\n    Tile.tiles = [];\n    score = 0;\n    addScore(\"\");\n    newTileTimeout();\n    newTileTimeout();\n});\ndocument.addEventListener(\"keydown\", function(ev) {\n    var _loop = function(ii) {\n        var intationMoveAll = [];\n        if (ev.key === \"ArrowUp\") {\n            var _loop = function(row) {\n                var intationMove = Tile.tiles.filter(function(tile) {\n                    return tile.coords.r === row;\n                });\n                intationMove.forEach(function(tile) {\n                    if (tile.checkMoveTop()) {\n                        var naighbour = tile.findNeighbourU();\n                        intationMoveAll.push(stap(naighbour, ev.key, tile));\n                    }\n                });\n            };\n            var _forMoveInHtml;\n            for(var row = 1; row < COUNT_FILDS_CELL; row++)_loop(row);\n            if (intationMoveAll.length === 0) return \"break\";\n            intationMoveAll.forEach(function(tile) {\n                tile.tile.style.transform = \"translateY(calc(-\".concat(ii * 100, \"% - \").concat(ii * 10, \"px))\");\n                tile.moved = true;\n            });\n            (_forMoveInHtml = forMoveInHtml).push.apply(_forMoveInHtml, _to_consumable_array(intationMoveAll));\n        }\n        if (ev.key === \"ArrowLeft\") {\n            var _loop1 = function(colamn) {\n                var intationMove = Tile.tiles.filter(function(tile) {\n                    return tile.coords.c === colamn;\n                });\n                intationMove.forEach(function(tile) {\n                    if (tile.checkMoveLeft()) {\n                        var naighbour = tile.findNeighbourL();\n                        intationMoveAll.push(stap(naighbour, ev.key, tile));\n                    }\n                });\n            };\n            var _forMoveInHtml1;\n            for(var colamn = 1; colamn < COUNT_FILDS_CELL; colamn++)_loop1(colamn);\n            if (intationMoveAll.length === 0) return \"break\";\n            intationMoveAll.forEach(function(tile) {\n                tile.tile.style.transform = \"translateX(calc(-\".concat(ii * 100, \"% - \").concat(ii * 10, \"px))\");\n                tile.moved = true;\n            });\n            (_forMoveInHtml1 = forMoveInHtml).push.apply(_forMoveInHtml1, _to_consumable_array(intationMoveAll));\n        }\n        if (ev.key === \"ArrowDown\") {\n            var _loop2 = function(row1) {\n                var intationMove = Tile.tiles.filter(function(tile) {\n                    return tile.coords.r === row1;\n                });\n                intationMove.forEach(function(tile) {\n                    if (tile.checkMoveBottomn()) {\n                        var naighbour = tile.findNeighbourB();\n                        intationMoveAll.push(stap(naighbour, ev.key, tile));\n                    }\n                });\n            };\n            var _forMoveInHtml2;\n            for(var row1 = 2; row1 >= 0; row1--)_loop2(row1);\n            if (intationMoveAll.length === 0) return \"break\";\n            intationMoveAll.forEach(function(tile) {\n                tile.tile.style.transform = \"translateY(calc(\".concat(ii * 100, \"% + \").concat(ii * 10, \"px))\");\n                tile.moved = true;\n            });\n            (_forMoveInHtml2 = forMoveInHtml).push.apply(_forMoveInHtml2, _to_consumable_array(intationMoveAll));\n        }\n        if (ev.key === \"ArrowRight\") {\n            var _loop3 = function(colamn1) {\n                var intationMove = Tile.tiles.filter(function(tile) {\n                    return tile.coords.c === colamn1;\n                });\n                intationMove.forEach(function(tile) {\n                    if (tile.checkMoveRight()) {\n                        var naighbour = tile.findNeighbourR();\n                        intationMoveAll.push(stap(naighbour, ev.key, tile));\n                    }\n                });\n            };\n            var _forMoveInHtml3;\n            for(var colamn1 = 2; colamn1 >= 0; colamn1--)_loop3(colamn1);\n            if (intationMoveAll.length === 0) return \"break\";\n            intationMoveAll.forEach(function(tile) {\n                tile.tile.style.transform = \"translateX(calc(\".concat(ii * 100, \"% + \").concat(ii * 10, \"px))\");\n                tile.moved = true;\n            });\n            (_forMoveInHtml3 = forMoveInHtml).push.apply(_forMoveInHtml3, _to_consumable_array(intationMoveAll));\n        }\n    };\n    if (moveTimeout) {\n        clearTimeout(moveTimeout);\n        moveAndCombineTileHTML(forMoveInHtml);\n    }\n    if (newTimeout) {\n        clearTimeout(newTimeout);\n        newTile();\n    }\n    forMoveInHtml = [];\n    for(var ii = 1; ii < COUNT_FILDS_CELL; ii++){\n        var _ret = _loop(ii);\n        if (_ret === \"break\") break;\n    }\n    if (forMoveInHtml.length > 0) {\n        moveTimeout = moveAndCombineTileHTMLTimeout(forMoveInHtml);\n        // moveAndCombineTileHTML(forMoveInHtml);\n        addScore(score);\n        newTimeout = newTileTimeout();\n    // newTile();\n    }\n    if (!checkOpportunity()) {\n        var gameFilg = document.querySelector(\".game-field\");\n        gameFilg.style.opacity = \"0.5\";\n        messageLose.classList.remove(\"hidden\");\n    }\n});\n\n//# sourceMappingURL=index.980a7a0d.js.map\n","'use strict';\n\nclass Tile {\n  constructor() {\n    const CHANS_TWO = 0.9;\n\n    this.numeric = Math.random() < CHANS_TWO ? 2 : 4;\n\n    this.coords = this.findPlase();\n    this.oldCoords = { ...this.coords };\n\n    this.canMuve = true;\n    this.tile = this.addTile();\n    this.moved = false;\n    this.combined = false;\n\n    Tile.tiles.push(this);\n  }\n\n  findPlase() {\n    const freeFields = [];\n\n    for (let r = 0; r < Tile.FIELD_ROWS.length; r++) {\n      const columns = Tile.FIELD_ROWS[r].children;\n\n      for (let c = 0; c < columns.length; c++) {\n        if (!columns[c].firstChild) {\n          freeFields.push({\n            r,\n            c,\n          });\n        }\n      }\n    }\n\n    if (freeFields.length === 0) {\n      return false;\n    }\n\n    const max = freeFields.length - 1;\n    const plase = Math.floor(Math.random() * (max + 1));\n\n    return freeFields[plase];\n  }\n\n  addTile() {\n    const { r, c } = this.coords;\n    const fieldForAdd = Tile.FIELD_ROWS[r].children[c];\n\n    fieldForAdd.insertAdjacentHTML('beforeend', `\n      <div class=\"cell cell--${this.numeric}\">${this.numeric}</div>\n    `);\n\n    return fieldForAdd.children[0];\n  }\n\n  checkMoveLeft() {\n    const { c } = this.coords;\n\n    if (c === 0) {\n      return false;\n    }\n\n    const neighbour = this.findNeighbourL();\n\n    return this.checkNeighbour(neighbour);\n  }\n\n  checkMoveRight() {\n    const { c } = this.coords;\n\n    if (c === 3) {\n      return false;\n    }\n\n    const neighbour = this.findNeighbourR();\n\n    return this.checkNeighbour(neighbour);\n  }\n\n  checkMoveTop() {\n    const { r } = this.coords;\n\n    if (r === 0) {\n      return false;\n    }\n\n    const neighbour = this.findNeighbourU();\n\n    return this.checkNeighbour(neighbour);\n  }\n\n  checkMoveBottomn() {\n    const { r } = this.coords;\n\n    if (r === 3) {\n      return false;\n    }\n\n    const neighbour = this.findNeighbourB();\n\n    return this.checkNeighbour(neighbour);\n  }\n\n  checkNeighbour(neighbour) {\n    if (!neighbour) {\n      return true;\n    }\n\n    if (\n      neighbour.numeric === this.numeric\n      && !neighbour.combined\n      && !this.combined\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  findNeighbourU() {\n    const { r, c } = this.coords;\n\n    return Tile.tiles.find(tile => {\n      if (tile.coords.c !== c) {\n        return false;\n      }\n\n      if (tile.coords.r !== r - 1) {\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  findNeighbourB() {\n    const { r, c } = this.coords;\n\n    return Tile.tiles.find(tile => {\n      if (tile.coords.c !== c) {\n        return false;\n      }\n\n      if (tile.coords.r !== r + 1) {\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  findNeighbourR() {\n    const { r, c } = this.coords;\n\n    return Tile.tiles.find(tile => {\n      if (tile.coords.r !== r) {\n        return false;\n      }\n\n      if (tile.coords.c !== c + 1) {\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  findNeighbourL() {\n    const { r, c } = this.coords;\n\n    return Tile.tiles.find(tile => {\n      if (tile.coords.r !== r) {\n        return false;\n      }\n\n      if (tile.coords.c !== c - 1) {\n        return false;\n      }\n\n      return true;\n    });\n  }\n}\nTile.FIELD_ROWS = document.querySelectorAll('.field-row');\nTile.tiles = [];\n\nconst COUNT_FILDS_CELL = 4;\nlet score = 0;\nlet moveTimeout;\nlet newTimeout;\nlet forMoveInHtml = [];\n\nconst buttonStart = document.querySelector('.start');\nconst buttonRestart = document.querySelector('.restart');\nconst messageWin = document.querySelector('.message-win');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\n\nfunction addScore(specs) {\n  document.querySelector('.game-score').innerHTML = specs;\n}\n\nfunction moveAndCombineTileHTMLTimeout() {\n  return setTimeout(() => {\n    moveAndCombineTileHTML();\n  }, 100);\n}\n\nfunction moveAndCombineTileHTML() {\n  forMoveInHtml.forEach(tile => {\n    if (tile.moved) {\n      const { r, c } = tile.oldCoords;\n\n      tile.tile = tile.addTile();\n\n      if (tile.combined) {\n        tile.tile.classList.add('combin');\n        tile.combined = false;\n      }\n\n      Tile.FIELD_ROWS[r].children[c].innerHTML = '';\n      tile.moved = false;\n      tile.oldCoords = { ...tile.coords };\n\n      moveTimeout = null;\n    }\n  });\n}\n\nfunction stap(naighbour, direction, tile) {\n// try {\n\n  if (naighbour) {\n    const naighbourIndex = Tile.tiles.indexOf(naighbour);\n\n    naighbour.tile.parentNode.innerHTML = '';\n    Tile.tiles.splice(naighbourIndex, 1);\n    naighbour.moved = false;\n\n    tile.numeric *= 2;\n    tile.combined = true;\n\n    score += tile.numeric;\n\n    if (tile.numeric >= 2042) {\n      messageWin.classList.remove('hidden');\n    }\n  }\n\n  // } catch (error) {\n  //   debugger;\n  // }\n\n  switch (direction) {\n    case 'ArrowUp':\n      tile.coords.r -= 1;\n      break;\n\n    case 'ArrowLeft':\n      tile.coords.c -= 1;\n      break;\n\n    case 'ArrowDown':\n      tile.coords.r += 1;\n      break;\n\n    case 'ArrowRight':\n      tile.coords.c += 1;\n      break;\n  }\n\n  return tile;\n}\n\nfunction newTileTimeout() {\n  return setTimeout(() => {\n    newTile();\n  }, 150);\n}\n\nfunction newTile() {\n  const tail = new Tile();\n\n  tail.tile.classList.add('born');\n\n  newTimeout = null;\n}\n\nfunction checkOpportunity() {\n  return Tile.tiles.some(tile => {\n    return tile.checkMoveTop()\n      || tile.checkMoveBottomn()\n      || tile.checkMoveLeft()\n      || tile.checkMoveRight();\n  });\n}\n\nbuttonStart.addEventListener('click', () => {\n  buttonRestart.classList.remove('hidden');\n  buttonStart.classList.add('hidden');\n  messageStart.classList.add('hidden');\n\n  newTileTimeout();\n  newTileTimeout();\n});\n\nbuttonRestart.addEventListener('click', () => {\n  messageWin.classList.add('hidden');\n  messageLose.classList.add('hidden');\n\n  const cells = document.querySelectorAll('.cell');\n\n  cells.forEach(cell => {\n    cell.parentNode.innerHTML = '';\n  });\n\n  Tile.tiles = [];\n  score = 0;\n  addScore('');\n\n  newTileTimeout();\n  newTileTimeout();\n});\n\ndocument.addEventListener('keydown', ev => {\n  if (moveTimeout) {\n    clearTimeout(moveTimeout);\n    moveAndCombineTileHTML(forMoveInHtml);\n  }\n\n  if (newTimeout) {\n    clearTimeout(newTimeout);\n    newTile();\n  }\n\n  forMoveInHtml = [];\n\n  for (let ii = 1; ii < COUNT_FILDS_CELL; ii++) {\n    const intationMoveAll = [];\n\n    if (ev.key === 'ArrowUp') {\n      for (let row = 1; row < COUNT_FILDS_CELL; row++) {\n        const intationMove = Tile.tiles.filter(tile => tile.coords.r === row);\n\n        intationMove.forEach(tile => {\n          if (tile.checkMoveTop()) {\n            const naighbour = tile.findNeighbourU();\n\n            intationMoveAll.push(stap(naighbour, ev.key, tile));\n          }\n        });\n      }\n\n      if (intationMoveAll.length === 0) {\n        break;\n      }\n\n      intationMoveAll.forEach(tile => {\n        tile.tile.style.transform = (\n          `translateY(calc(-${ii * 100}% - ${ii * 10}px))`\n        );\n        tile.moved = true;\n      });\n\n      forMoveInHtml.push(...intationMoveAll);\n    }\n\n    if (ev.key === 'ArrowLeft') {\n      for (let colamn = 1; colamn < COUNT_FILDS_CELL; colamn++) {\n        const intationMove = (\n          Tile.tiles.filter(tile => tile.coords.c === colamn)\n        );\n\n        intationMove.forEach(tile => {\n          if (tile.checkMoveLeft()) {\n            const naighbour = tile.findNeighbourL();\n\n            intationMoveAll.push(stap(naighbour, ev.key, tile));\n          }\n        });\n      }\n\n      if (intationMoveAll.length === 0) {\n        break;\n      }\n\n      intationMoveAll.forEach(tile => {\n        tile.tile.style.transform = (\n          `translateX(calc(-${ii * 100}% - ${ii * 10}px))`\n        );\n        tile.moved = true;\n      });\n\n      forMoveInHtml.push(...intationMoveAll);\n    }\n\n    if (ev.key === 'ArrowDown') {\n      for (let row = 2; row >= 0; row--) {\n        const intationMove = Tile.tiles.filter(tile => tile.coords.r === row);\n\n        intationMove.forEach(tile => {\n          if (tile.checkMoveBottomn()) {\n            const naighbour = tile.findNeighbourB();\n\n            intationMoveAll.push(stap(naighbour, ev.key, tile));\n          }\n        });\n      }\n\n      if (intationMoveAll.length === 0) {\n        break;\n      }\n\n      intationMoveAll.forEach(tile => {\n        tile.tile.style.transform = (\n          `translateY(calc(${ii * 100}% + ${ii * 10}px))`\n        );\n        tile.moved = true;\n      });\n\n      forMoveInHtml.push(...intationMoveAll);\n    }\n\n    if (ev.key === 'ArrowRight') {\n      for (let colamn = 2; colamn >= 0; colamn--) {\n        const intationMove = (\n          Tile.tiles.filter(tile => tile.coords.c === colamn)\n        );\n\n        intationMove.forEach(tile => {\n          if (tile.checkMoveRight()) {\n            const naighbour = tile.findNeighbourR();\n\n            intationMoveAll.push(stap(naighbour, ev.key, tile));\n          }\n        });\n      }\n\n      if (intationMoveAll.length === 0) {\n        break;\n      }\n\n      intationMoveAll.forEach(tile => {\n        tile.tile.style.transform = (\n          `translateX(calc(${ii * 100}% + ${ii * 10}px))`\n        );\n        tile.moved = true;\n      });\n\n      forMoveInHtml.push(...intationMoveAll);\n    }\n  }\n\n  if (forMoveInHtml.length > 0) {\n    moveTimeout = moveAndCombineTileHTMLTimeout(forMoveInHtml);\n    // moveAndCombineTileHTML(forMoveInHtml);\n\n    addScore(score);\n\n    newTimeout = newTileTimeout();\n    // newTile();\n  }\n\n  if (!checkOpportunity()) {\n    const gameFilg = document.querySelector('.game-field');\n\n    gameFilg.style.opacity = '0.5';\n    messageLose.classList.remove('hidden');\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_object_spread","arguments","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","value","obj","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","moveTimeout","newTimeout","Tile","protoProps","staticProps","_class_call_check","instance","Constructor","numeric","Math","random","coords","findPlase","oldCoords","canMuve","tile","addTile","moved","combined","tiles","push","freeFields","r","FIELD_ROWS","columns","children","c","firstChild","max","floor","_this_coords","fieldForAdd","insertAdjacentHTML","neighbour","findNeighbourL","checkNeighbour","findNeighbourR","findNeighbourU","findNeighbourB","find","document","querySelectorAll","score","forMoveInHtml","buttonStart","querySelector","buttonRestart","messageWin","messageStart","messageLose","addScore","specs","innerHTML","moveAndCombineTileHTML","_tile_oldCoords","classList","add","stap","naighbour","direction","naighbourIndex","indexOf","parentNode","splice","remove","newTileTimeout","setTimeout","newTile","tail","addEventListener","cells","cell","ev","_loop","ii","intationMoveAll","_forMoveInHtml","row","intationMove","checkMoveTop","style","transform","apply","_forMoveInHtml1","_loop1","colamn","checkMoveLeft","_forMoveInHtml2","_loop2","row1","checkMoveBottomn","_forMoveInHtml3","_loop3","colamn1","checkMoveRight","clearTimeout","_ret","some","gameFilg","opacity"],"version":3,"file":"index.980a7a0d.js.map"}