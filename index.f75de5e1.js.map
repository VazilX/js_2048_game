{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nclass Tile {\n  constructor() {\n    const CHANS_TWO = 0.9;\n\n    this.numeric = Math.random() < CHANS_TWO ? 2 : 4;\n\n    this.coords = this.findPlase();\n    this.oldCoords = { ...this.coords };\n\n    this.canMuve = true;\n    this.tile = this.addTile();\n    this.moved = false;\n    this.combined = false;\n\n    Tile.tiles.push(this);\n  }\n\n  findPlase() {\n    const freeFields = [];\n\n    for (let r = 0; r < Tile.FIELD_ROWS.length; r++) {\n      const columns = Tile.FIELD_ROWS[r].children;\n\n      for (let c = 0; c < columns.length; c++) {\n        if (!columns[c].firstChild) {\n          freeFields.push({\n            r,\n            c,\n          });\n        }\n      }\n    }\n\n    if (freeFields.length === 0) {\n      return false;\n    }\n\n    const max = freeFields.length - 1;\n    const plase = Math.floor(Math.random() * (max + 1));\n\n    return freeFields[plase];\n  }\n\n  addTile() {\n    const { r, c } = this.coords;\n    const fieldForAdd = Tile.FIELD_ROWS[r].children[c];\n\n    fieldForAdd.insertAdjacentHTML('beforeend', `\n      <div class=\"cell cell--${this.numeric}\">${this.numeric}</div>\n    `);\n\n    return fieldForAdd.children[0];\n  }\n\n  checkMoveLeft() {\n    const { c } = this.coords;\n\n    if (c === 0) {\n      return false;\n    }\n\n    const neighbour = this.findNeighbourL();\n\n    return this.checkNeighbour(neighbour);\n  }\n\n  checkMoveRight() {\n    const { c } = this.coords;\n\n    if (c === 3) {\n      return false;\n    }\n\n    const neighbour = this.findNeighbourR();\n\n    return this.checkNeighbour(neighbour);\n  }\n\n  checkMoveTop() {\n    const { r } = this.coords;\n\n    if (r === 0) {\n      return false;\n    }\n\n    const neighbour = this.findNeighbourU();\n\n    return this.checkNeighbour(neighbour);\n  }\n\n  checkMoveBottomn() {\n    const { r } = this.coords;\n\n    if (r === 3) {\n      return false;\n    }\n\n    const neighbour = this.findNeighbourB();\n\n    return this.checkNeighbour(neighbour);\n  }\n\n  checkNeighbour(neighbour) {\n    if (!neighbour) {\n      return true;\n    }\n\n    if (\n      neighbour.numeric === this.numeric\n      && !neighbour.combined\n      && !this.combined\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  findNeighbourU() {\n    const { r, c } = this.coords;\n\n    return Tile.tiles.find(tile => {\n      if (tile.coords.c !== c) {\n        return false;\n      }\n\n      if (tile.coords.r !== r - 1) {\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  findNeighbourB() {\n    const { r, c } = this.coords;\n\n    return Tile.tiles.find(tile => {\n      if (tile.coords.c !== c) {\n        return false;\n      }\n\n      if (tile.coords.r !== r + 1) {\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  findNeighbourR() {\n    const { r, c } = this.coords;\n\n    return Tile.tiles.find(tile => {\n      if (tile.coords.r !== r) {\n        return false;\n      }\n\n      if (tile.coords.c !== c + 1) {\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  findNeighbourL() {\n    const { r, c } = this.coords;\n\n    return Tile.tiles.find(tile => {\n      if (tile.coords.r !== r) {\n        return false;\n      }\n\n      if (tile.coords.c !== c - 1) {\n        return false;\n      }\n\n      return true;\n    });\n  }\n}\nTile.FIELD_ROWS = document.querySelectorAll('.field-row');\nTile.tiles = [];\n\nconst COUNT_FILDS_CELL = 4;\nlet score = 0;\nlet moveTimeout;\nlet newTimeout;\nlet forMoveInHtml = [];\n\nconst buttonStart = document.querySelector('.start');\nconst buttonRestart = document.querySelector('.restart');\nconst messageWin = document.querySelector('.message-win');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\n\nfunction addScore(specs) {\n  document.querySelector('.game-score').innerHTML = specs;\n}\n\nfunction moveAndCombineTileHTMLTimeout() {\n  return setTimeout(() => {\n    moveAndCombineTileHTML();\n  }, 100);\n}\n\nfunction moveAndCombineTileHTML() {\n  forMoveInHtml.forEach(tile => {\n    if (tile.moved) {\n      const { r, c } = tile.oldCoords;\n\n      tile.tile = tile.addTile();\n\n      if (tile.combined) {\n        tile.tile.classList.add('combin');\n        tile.combined = false;\n      }\n\n      Tile.FIELD_ROWS[r].children[c].innerHTML = '';\n      tile.moved = false;\n      tile.oldCoords = { ...tile.coords };\n\n      moveTimeout = null;\n    }\n  });\n}\n\nfunction stap(naighbour, direction, tile) {\n// try {\n\n  if (naighbour) {\n    const naighbourIndex = Tile.tiles.indexOf(naighbour);\n\n    naighbour.tile.parentNode.innerHTML = '';\n    Tile.tiles.splice(naighbourIndex, 1);\n    naighbour.moved = false;\n\n    tile.numeric *= 2;\n    tile.combined = true;\n\n    score += tile.numeric;\n\n    if (tile.numeric >= 2042) {\n      messageWin.classList.remove('hidden');\n    }\n  }\n\n  // } catch (error) {\n  //   debugger;\n  // }\n\n  switch (direction) {\n    case 'ArrowUp':\n      tile.coords.r -= 1;\n      break;\n\n    case 'ArrowLeft':\n      tile.coords.c -= 1;\n      break;\n\n    case 'ArrowDown':\n      tile.coords.r += 1;\n      break;\n\n    case 'ArrowRight':\n      tile.coords.c += 1;\n      break;\n  }\n\n  return tile;\n}\n\nfunction newTileTimeout() {\n  return setTimeout(() => {\n    newTile();\n  }, 150);\n}\n\nfunction newTile() {\n  const tail = new Tile();\n\n  tail.tile.classList.add('born');\n\n  newTimeout = null;\n}\n\nfunction checkOpportunity() {\n  return Tile.tiles.some(tile => {\n    return tile.checkMoveTop()\n      || tile.checkMoveBottomn()\n      || tile.checkMoveLeft()\n      || tile.checkMoveRight();\n  });\n}\n\nbuttonStart.addEventListener('click', () => {\n  buttonRestart.classList.remove('hidden');\n  buttonStart.classList.add('hidden');\n  messageStart.classList.add('hidden');\n\n  newTileTimeout();\n  newTileTimeout();\n});\n\nbuttonRestart.addEventListener('click', () => {\n  messageWin.classList.add('hidden');\n  messageLose.classList.add('hidden');\n\n  const cells = document.querySelectorAll('.cell');\n\n  cells.forEach(cell => {\n    cell.parentNode.innerHTML = '';\n  });\n\n  Tile.tiles = [];\n  score = 0;\n  addScore('');\n\n  newTileTimeout();\n  newTileTimeout();\n});\n\ndocument.addEventListener('keydown', ev => {\n  if (moveTimeout) {\n    clearTimeout(moveTimeout);\n    moveAndCombineTileHTML(forMoveInHtml);\n  }\n\n  if (newTimeout) {\n    clearTimeout(newTimeout);\n    newTile();\n  }\n\n  forMoveInHtml = [];\n\n  for (let ii = 1; ii < COUNT_FILDS_CELL; ii++) {\n    const intationMoveAll = [];\n\n    if (ev.key === 'ArrowUp') {\n      for (let row = 1; row < COUNT_FILDS_CELL; row++) {\n        const intationMove = Tile.tiles.filter(tile => tile.coords.r === row);\n\n        intationMove.forEach(tile => {\n          if (tile.checkMoveTop()) {\n            const naighbour = tile.findNeighbourU();\n\n            intationMoveAll.push(stap(naighbour, ev.key, tile));\n          }\n        });\n      }\n\n      if (intationMoveAll.length === 0) {\n        break;\n      }\n\n      intationMoveAll.forEach(tile => {\n        tile.tile.style.transform = (\n          `translateY(calc(-${ii * 100}% - ${ii * 10}px))`\n        );\n        tile.moved = true;\n      });\n\n      forMoveInHtml.push(...intationMoveAll);\n    }\n\n    if (ev.key === 'ArrowLeft') {\n      for (let colamn = 1; colamn < COUNT_FILDS_CELL; colamn++) {\n        const intationMove = (\n          Tile.tiles.filter(tile => tile.coords.c === colamn)\n        );\n\n        intationMove.forEach(tile => {\n          if (tile.checkMoveLeft()) {\n            const naighbour = tile.findNeighbourL();\n\n            intationMoveAll.push(stap(naighbour, ev.key, tile));\n          }\n        });\n      }\n\n      if (intationMoveAll.length === 0) {\n        break;\n      }\n\n      intationMoveAll.forEach(tile => {\n        tile.tile.style.transform = (\n          `translateX(calc(-${ii * 100}% - ${ii * 10}px))`\n        );\n        tile.moved = true;\n      });\n\n      forMoveInHtml.push(...intationMoveAll);\n    }\n\n    if (ev.key === 'ArrowDown') {\n      for (let row = 2; row >= 0; row--) {\n        const intationMove = Tile.tiles.filter(tile => tile.coords.r === row);\n\n        intationMove.forEach(tile => {\n          if (tile.checkMoveBottomn()) {\n            const naighbour = tile.findNeighbourB();\n\n            intationMoveAll.push(stap(naighbour, ev.key, tile));\n          }\n        });\n      }\n\n      if (intationMoveAll.length === 0) {\n        break;\n      }\n\n      intationMoveAll.forEach(tile => {\n        tile.tile.style.transform = (\n          `translateY(calc(${ii * 100}% + ${ii * 10}px))`\n        );\n        tile.moved = true;\n      });\n\n      forMoveInHtml.push(...intationMoveAll);\n    }\n\n    if (ev.key === 'ArrowRight') {\n      for (let colamn = 2; colamn >= 0; colamn--) {\n        const intationMove = (\n          Tile.tiles.filter(tile => tile.coords.c === colamn)\n        );\n\n        intationMove.forEach(tile => {\n          if (tile.checkMoveRight()) {\n            const naighbour = tile.findNeighbourR();\n\n            intationMoveAll.push(stap(naighbour, ev.key, tile));\n          }\n        });\n      }\n\n      if (intationMoveAll.length === 0) {\n        break;\n      }\n\n      intationMoveAll.forEach(tile => {\n        tile.tile.style.transform = (\n          `translateX(calc(${ii * 100}% + ${ii * 10}px))`\n        );\n        tile.moved = true;\n      });\n\n      forMoveInHtml.push(...intationMoveAll);\n    }\n  }\n\n  if (forMoveInHtml.length > 0) {\n    moveTimeout = moveAndCombineTileHTMLTimeout(forMoveInHtml);\n    // moveAndCombineTileHTML(forMoveInHtml);\n\n    addScore(score);\n\n    newTimeout = newTileTimeout();\n    // newTile();\n  }\n\n  if (!checkOpportunity()) {\n    const gameFilg = document.querySelector('.game-field');\n\n    gameFilg.style.opacity = '0.5';\n    messageLose.classList.remove('hidden');\n  }\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}